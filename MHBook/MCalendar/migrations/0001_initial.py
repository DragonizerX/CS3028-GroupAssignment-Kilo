# Generated by Django 5.1.2 on 2024-11-05 14:44

import MCalendar.models
import datetime
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipmentID_auto', models.AutoField(primary_key=True, serialize=False)),
                ('equipmentName', models.CharField(max_length=100)),
                ('hourlyRate', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoiceRef', models.CharField(default='None', max_length=10)),
                ('bookingName', models.CharField(max_length=80)),
                ('supervisorName', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=254)),
                ('bookingDate', models.DateField()),
                ('startTime', models.TimeField()),
                ('finishTime', models.TimeField()),
                ('comments', models.TextField(max_length=1000)),
                ('equipment', models.CharField(default='Not specified', max_length=100)),
                ('totalTime', models.IntegerField(default=0)),
                ('hourlyRate', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('last_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoiceRef', models.CharField(max_length=10)),
                ('supervisor', models.CharField(max_length=64)),
                ('issueDate', models.DateField(default=django.utils.timezone.now)),
                ('startDate', models.DateField(default=datetime.date(2024, 8, 5))),
                ('finishDate', models.DateField(default=django.utils.timezone.now)),
                ('totalCost', models.FloatField(default=0.0)),
                ('equipment', models.ManyToManyField(to='MCalendar.equipment')),
                ('events', models.ManyToManyField(to='MCalendar.event')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('last_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('password', models.CharField(max_length=128, null=True)),
                ('telephone', models.CharField(blank=True, max_length=11)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', MCalendar.models.CustomUserManager()),
            ],
        ),
    ]
