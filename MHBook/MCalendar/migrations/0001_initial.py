# Generated by Django 5.1.2 on 2024-10-23 17:00

import MCalendar.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=64)),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('supervisor', models.CharField(default='N/A', max_length=64)),
                ('organisation', models.CharField(max_length=128)),
                ('isAccepted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=64)),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('supervisor', models.CharField(default='N/A', max_length=64)),
                ('organisation', models.CharField(default='N/A', max_length=128)),
                ('date', models.DateField()),
                ('start', models.TimeField()),
                ('finish', models.TimeField()),
                ('room', models.CharField(max_length=16)),
                ('equipment', models.CharField(max_length=64)),
                ('equipmentid', models.CharField(default='N/A', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookingName', models.CharField(max_length=80)),
                ('supervisorName', models.CharField(max_length=80)),
                ('bookingDate', models.DateField()),
                ('startTime', models.TimeField()),
                ('allotedTime', models.TimeField()),
                ('comments', models.TextField(max_length=1000)),
                ('equipment', models.CharField(default='Not specified', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('last_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('password', models.CharField(max_length=128, null=True)),
                ('telephone', models.CharField(blank=True, max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('last_name', models.CharField(blank=True, max_length=15, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('password', models.CharField(max_length=128, null=True)),
                ('telephone', models.CharField(blank=True, max_length=11)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', MCalendar.models.CustomUserManager()),
            ],
        ),
    ]
